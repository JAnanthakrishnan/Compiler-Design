State 78 conflicts: 8 reduce/reduce
State 80 conflicts: 8 reduce/reduce


Grammar

    0 $accept: program $end

    1 program: START instructions END
    2        | START END

    3 ifstmt: IF '(' expr ')' THEN instructions ELSE instructions ENDIF ';'
    4       | IF '(' expr ')' THEN instructions ENDIF ';'

    5 whilestmt: WHILE '(' expr ')' DO instructions ENDWHILE ';'
    6          | WHILE '(' expr ')' DO instructions BREAK instructions ENDWHILE ';'
    7          | WHILE '(' expr ')' DO instructions CONTINUE instructions ENDWHILE ';'

    8 instructions: instructions stmt
    9             | stmt
   10             | instructions BREAK stmt
   11             | instructions CONTINUE stmt

   12 stmt: inputstmt
   13     | outputstmt
   14     | assignstmt
   15     | ifstmt
   16     | whilestmt

   17 inputstmt: READ '(' ID ')' ';'

   18 outputstmt: WRITE '(' expr ')' ';'

   19 assignstmt: ID ASSIGN expr ';'

   20 expr: expr PLUS expr
   21     | expr MINUS expr
   22     | expr MUL expr
   23     | expr DIV expr
   24     | expr LT expr
   25     | expr GT expr
   26     | expr GTE expr
   27     | expr LTE expr
   28     | expr EQ expr
   29     | expr NEQ expr
   30     | '(' expr ')'
   31     | NUM
   32     | ID


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 3 4 5 6 7 17 18 30
    ')' (41) 3 4 5 6 7 17 18 30
    ';' (59) 3 4 5 6 7 17 18 19
    error (256)
    START (258) 1 2
    END (259) 1 2
    WRITE (260) 18
    READ (261) 17
    ASSIGN (262) 19
    PLUS (263) 20
    MINUS (264) 21
    MUL (265) 22
    DIV (266) 23
    NUM (267) 31
    ID (268) 17 19 32
    IF (269) 3 4
    THEN (270) 3 4
    ELSE (271) 3
    ENDIF (272) 3 4
    WHILE (273) 5 6 7
    DO (274) 5 6 7
    ENDWHILE (275) 5 6 7
    LT (276) 24
    GT (277) 25
    LTE (278) 27
    GTE (279) 26
    EQ (280) 28
    NEQ (281) 29
    CONTINUE (282) 7 11
    BREAK (283) 6 10


Nonterminals, with rules where they appear

    $accept (32)
        on left: 0
    program <tree> (33)
        on left: 1 2
        on right: 0
    ifstmt <tree> (34)
        on left: 3 4
        on right: 15
    whilestmt <tree> (35)
        on left: 5 6 7
        on right: 16
    instructions <tree> (36)
        on left: 8 9 10 11
        on right: 1 3 4 5 6 7 8 10 11
    stmt <tree> (37)
        on left: 12 13 14 15 16
        on right: 8 9 10 11
    inputstmt <tree> (38)
        on left: 17
        on right: 12
    outputstmt <tree> (39)
        on left: 18
        on right: 13
    assignstmt <tree> (40)
        on left: 19
        on right: 14
    expr <tree> (41)
        on left: 20 21 22 23 24 25 26 27 28 29 30 31 32
        on right: 3 4 5 6 7 18 19 20 21 22 23 24 25 26 27 28 29 30


State 0

    0 $accept: . program $end

    START  shift, and go to state 1

    program  go to state 2


State 1

    1 program: START . instructions END
    2        | START . END

    END    shift, and go to state 3
    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt        go to state 9
    whilestmt     go to state 10
    instructions  go to state 11
    stmt          go to state 12
    inputstmt     go to state 13
    outputstmt    go to state 14
    assignstmt    go to state 15


State 2

    0 $accept: program . $end

    $end  shift, and go to state 16


State 3

    2 program: START END .

    $default  reduce using rule 2 (program)


State 4

   18 outputstmt: WRITE . '(' expr ')' ';'

    '('  shift, and go to state 17


State 5

   17 inputstmt: READ . '(' ID ')' ';'

    '('  shift, and go to state 18


State 6

   19 assignstmt: ID . ASSIGN expr ';'

    ASSIGN  shift, and go to state 19


State 7

    3 ifstmt: IF . '(' expr ')' THEN instructions ELSE instructions ENDIF ';'
    4       | IF . '(' expr ')' THEN instructions ENDIF ';'

    '('  shift, and go to state 20


State 8

    5 whilestmt: WHILE . '(' expr ')' DO instructions ENDWHILE ';'
    6          | WHILE . '(' expr ')' DO instructions BREAK instructions ENDWHILE ';'
    7          | WHILE . '(' expr ')' DO instructions CONTINUE instructions ENDWHILE ';'

    '('  shift, and go to state 21


State 9

   15 stmt: ifstmt .

    $default  reduce using rule 15 (stmt)


State 10

   16 stmt: whilestmt .

    $default  reduce using rule 16 (stmt)


State 11

    1 program: START instructions . END
    8 instructions: instructions . stmt
   10             | instructions . BREAK stmt
   11             | instructions . CONTINUE stmt

    END       shift, and go to state 22
    WRITE     shift, and go to state 4
    READ      shift, and go to state 5
    ID        shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    CONTINUE  shift, and go to state 23
    BREAK     shift, and go to state 24

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 25
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 12

    9 instructions: stmt .

    $default  reduce using rule 9 (instructions)


State 13

   12 stmt: inputstmt .

    $default  reduce using rule 12 (stmt)


State 14

   13 stmt: outputstmt .

    $default  reduce using rule 13 (stmt)


State 15

   14 stmt: assignstmt .

    $default  reduce using rule 14 (stmt)


State 16

    0 $accept: program $end .

    $default  accept


State 17

   18 outputstmt: WRITE '(' . expr ')' ';'

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 29


State 18

   17 inputstmt: READ '(' . ID ')' ';'

    ID  shift, and go to state 30


State 19

   19 assignstmt: ID ASSIGN . expr ';'

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 31


State 20

    3 ifstmt: IF '(' . expr ')' THEN instructions ELSE instructions ENDIF ';'
    4       | IF '(' . expr ')' THEN instructions ENDIF ';'

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 32


State 21

    5 whilestmt: WHILE '(' . expr ')' DO instructions ENDWHILE ';'
    6          | WHILE '(' . expr ')' DO instructions BREAK instructions ENDWHILE ';'
    7          | WHILE '(' . expr ')' DO instructions CONTINUE instructions ENDWHILE ';'

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 33


State 22

    1 program: START instructions END .

    $default  reduce using rule 1 (program)


State 23

   11 instructions: instructions CONTINUE . stmt

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 34
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 24

   10 instructions: instructions BREAK . stmt

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 35
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 25

    8 instructions: instructions stmt .

    $default  reduce using rule 8 (instructions)


State 26

   31 expr: NUM .

    $default  reduce using rule 31 (expr)


State 27

   32 expr: ID .

    $default  reduce using rule 32 (expr)


State 28

   30 expr: '(' . expr ')'

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 36


State 29

   18 outputstmt: WRITE '(' expr . ')' ';'
   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38
    MUL    shift, and go to state 39
    DIV    shift, and go to state 40
    LT     shift, and go to state 41
    GT     shift, and go to state 42
    LTE    shift, and go to state 43
    GTE    shift, and go to state 44
    EQ     shift, and go to state 45
    NEQ    shift, and go to state 46
    ')'    shift, and go to state 47


State 30

   17 inputstmt: READ '(' ID . ')' ';'

    ')'  shift, and go to state 48


State 31

   19 assignstmt: ID ASSIGN expr . ';'
   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38
    MUL    shift, and go to state 39
    DIV    shift, and go to state 40
    LT     shift, and go to state 41
    GT     shift, and go to state 42
    LTE    shift, and go to state 43
    GTE    shift, and go to state 44
    EQ     shift, and go to state 45
    NEQ    shift, and go to state 46
    ';'    shift, and go to state 49


State 32

    3 ifstmt: IF '(' expr . ')' THEN instructions ELSE instructions ENDIF ';'
    4       | IF '(' expr . ')' THEN instructions ENDIF ';'
   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38
    MUL    shift, and go to state 39
    DIV    shift, and go to state 40
    LT     shift, and go to state 41
    GT     shift, and go to state 42
    LTE    shift, and go to state 43
    GTE    shift, and go to state 44
    EQ     shift, and go to state 45
    NEQ    shift, and go to state 46
    ')'    shift, and go to state 50


State 33

    5 whilestmt: WHILE '(' expr . ')' DO instructions ENDWHILE ';'
    6          | WHILE '(' expr . ')' DO instructions BREAK instructions ENDWHILE ';'
    7          | WHILE '(' expr . ')' DO instructions CONTINUE instructions ENDWHILE ';'
   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38
    MUL    shift, and go to state 39
    DIV    shift, and go to state 40
    LT     shift, and go to state 41
    GT     shift, and go to state 42
    LTE    shift, and go to state 43
    GTE    shift, and go to state 44
    EQ     shift, and go to state 45
    NEQ    shift, and go to state 46
    ')'    shift, and go to state 51


State 34

   11 instructions: instructions CONTINUE stmt .

    $default  reduce using rule 11 (instructions)


State 35

   10 instructions: instructions BREAK stmt .

    $default  reduce using rule 10 (instructions)


State 36

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr
   30     | '(' expr . ')'

    PLUS   shift, and go to state 37
    MINUS  shift, and go to state 38
    MUL    shift, and go to state 39
    DIV    shift, and go to state 40
    LT     shift, and go to state 41
    GT     shift, and go to state 42
    LTE    shift, and go to state 43
    GTE    shift, and go to state 44
    EQ     shift, and go to state 45
    NEQ    shift, and go to state 46
    ')'    shift, and go to state 52


State 37

   20 expr: expr PLUS . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 53


State 38

   21 expr: expr MINUS . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 54


State 39

   22 expr: expr MUL . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 55


State 40

   23 expr: expr DIV . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 56


State 41

   24 expr: expr LT . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 57


State 42

   25 expr: expr GT . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 58


State 43

   27 expr: expr LTE . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 59


State 44

   26 expr: expr GTE . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 60


State 45

   28 expr: expr EQ . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 61


State 46

   29 expr: expr NEQ . expr

    NUM  shift, and go to state 26
    ID   shift, and go to state 27
    '('  shift, and go to state 28

    expr  go to state 62


State 47

   18 outputstmt: WRITE '(' expr ')' . ';'

    ';'  shift, and go to state 63


State 48

   17 inputstmt: READ '(' ID ')' . ';'

    ';'  shift, and go to state 64


State 49

   19 assignstmt: ID ASSIGN expr ';' .

    $default  reduce using rule 19 (assignstmt)


State 50

    3 ifstmt: IF '(' expr ')' . THEN instructions ELSE instructions ENDIF ';'
    4       | IF '(' expr ')' . THEN instructions ENDIF ';'

    THEN  shift, and go to state 65


State 51

    5 whilestmt: WHILE '(' expr ')' . DO instructions ENDWHILE ';'
    6          | WHILE '(' expr ')' . DO instructions BREAK instructions ENDWHILE ';'
    7          | WHILE '(' expr ')' . DO instructions CONTINUE instructions ENDWHILE ';'

    DO  shift, and go to state 66


State 52

   30 expr: '(' expr ')' .

    $default  reduce using rule 30 (expr)


State 53

   20 expr: expr . PLUS expr
   20     | expr PLUS expr .
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    MUL  shift, and go to state 39
    DIV  shift, and go to state 40
    LT   shift, and go to state 41
    GT   shift, and go to state 42
    LTE  shift, and go to state 43
    GTE  shift, and go to state 44
    EQ   shift, and go to state 45
    NEQ  shift, and go to state 46

    $default  reduce using rule 20 (expr)


State 54

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   21     | expr MINUS expr .
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    MUL  shift, and go to state 39
    DIV  shift, and go to state 40
    LT   shift, and go to state 41
    GT   shift, and go to state 42
    LTE  shift, and go to state 43
    GTE  shift, and go to state 44
    EQ   shift, and go to state 45
    NEQ  shift, and go to state 46

    $default  reduce using rule 21 (expr)


State 55

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   22     | expr MUL expr .
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    LT   shift, and go to state 41
    GT   shift, and go to state 42
    LTE  shift, and go to state 43
    GTE  shift, and go to state 44
    EQ   shift, and go to state 45
    NEQ  shift, and go to state 46

    $default  reduce using rule 22 (expr)


State 56

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   23     | expr DIV expr .
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    LT   shift, and go to state 41
    GT   shift, and go to state 42
    LTE  shift, and go to state 43
    GTE  shift, and go to state 44
    EQ   shift, and go to state 45
    NEQ  shift, and go to state 46

    $default  reduce using rule 23 (expr)


State 57

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   24     | expr LT expr .
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    LT   error (nonassociative)
    GT   error (nonassociative)
    LTE  error (nonassociative)
    GTE  error (nonassociative)
    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 24 (expr)


State 58

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   25     | expr GT expr .
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    LT   error (nonassociative)
    GT   error (nonassociative)
    LTE  error (nonassociative)
    GTE  error (nonassociative)
    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 59

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   27     | expr LTE expr .
   28     | expr . EQ expr
   29     | expr . NEQ expr

    LT   error (nonassociative)
    GT   error (nonassociative)
    LTE  error (nonassociative)
    GTE  error (nonassociative)
    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 27 (expr)


State 60

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   26     | expr GTE expr .
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr

    LT   error (nonassociative)
    GT   error (nonassociative)
    LTE  error (nonassociative)
    GTE  error (nonassociative)
    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 61

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   28     | expr EQ expr .
   29     | expr . NEQ expr

    LT   error (nonassociative)
    GT   error (nonassociative)
    LTE  error (nonassociative)
    GTE  error (nonassociative)
    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 28 (expr)


State 62

   20 expr: expr . PLUS expr
   21     | expr . MINUS expr
   22     | expr . MUL expr
   23     | expr . DIV expr
   24     | expr . LT expr
   25     | expr . GT expr
   26     | expr . GTE expr
   27     | expr . LTE expr
   28     | expr . EQ expr
   29     | expr . NEQ expr
   29     | expr NEQ expr .

    LT   error (nonassociative)
    GT   error (nonassociative)
    LTE  error (nonassociative)
    GTE  error (nonassociative)
    EQ   error (nonassociative)
    NEQ  error (nonassociative)

    $default  reduce using rule 29 (expr)


State 63

   18 outputstmt: WRITE '(' expr ')' ';' .

    $default  reduce using rule 18 (outputstmt)


State 64

   17 inputstmt: READ '(' ID ')' ';' .

    $default  reduce using rule 17 (inputstmt)


State 65

    3 ifstmt: IF '(' expr ')' THEN . instructions ELSE instructions ENDIF ';'
    4       | IF '(' expr ')' THEN . instructions ENDIF ';'

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt        go to state 9
    whilestmt     go to state 10
    instructions  go to state 67
    stmt          go to state 12
    inputstmt     go to state 13
    outputstmt    go to state 14
    assignstmt    go to state 15


State 66

    5 whilestmt: WHILE '(' expr ')' DO . instructions ENDWHILE ';'
    6          | WHILE '(' expr ')' DO . instructions BREAK instructions ENDWHILE ';'
    7          | WHILE '(' expr ')' DO . instructions CONTINUE instructions ENDWHILE ';'

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt        go to state 9
    whilestmt     go to state 10
    instructions  go to state 68
    stmt          go to state 12
    inputstmt     go to state 13
    outputstmt    go to state 14
    assignstmt    go to state 15


State 67

    3 ifstmt: IF '(' expr ')' THEN instructions . ELSE instructions ENDIF ';'
    4       | IF '(' expr ')' THEN instructions . ENDIF ';'
    8 instructions: instructions . stmt
   10             | instructions . BREAK stmt
   11             | instructions . CONTINUE stmt

    WRITE     shift, and go to state 4
    READ      shift, and go to state 5
    ID        shift, and go to state 6
    IF        shift, and go to state 7
    ELSE      shift, and go to state 69
    ENDIF     shift, and go to state 70
    WHILE     shift, and go to state 8
    CONTINUE  shift, and go to state 23
    BREAK     shift, and go to state 24

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 25
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 68

    5 whilestmt: WHILE '(' expr ')' DO instructions . ENDWHILE ';'
    6          | WHILE '(' expr ')' DO instructions . BREAK instructions ENDWHILE ';'
    7          | WHILE '(' expr ')' DO instructions . CONTINUE instructions ENDWHILE ';'
    8 instructions: instructions . stmt
   10             | instructions . BREAK stmt
   11             | instructions . CONTINUE stmt

    WRITE     shift, and go to state 4
    READ      shift, and go to state 5
    ID        shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    ENDWHILE  shift, and go to state 71
    CONTINUE  shift, and go to state 72
    BREAK     shift, and go to state 73

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 25
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 69

    3 ifstmt: IF '(' expr ')' THEN instructions ELSE . instructions ENDIF ';'

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt        go to state 9
    whilestmt     go to state 10
    instructions  go to state 74
    stmt          go to state 12
    inputstmt     go to state 13
    outputstmt    go to state 14
    assignstmt    go to state 15


State 70

    4 ifstmt: IF '(' expr ')' THEN instructions ENDIF . ';'

    ';'  shift, and go to state 75


State 71

    5 whilestmt: WHILE '(' expr ')' DO instructions ENDWHILE . ';'

    ';'  shift, and go to state 76


State 72

    7 whilestmt: WHILE '(' expr ')' DO instructions CONTINUE . instructions ENDWHILE ';'
   11 instructions: instructions CONTINUE . stmt

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt        go to state 9
    whilestmt     go to state 10
    instructions  go to state 77
    stmt          go to state 78
    inputstmt     go to state 13
    outputstmt    go to state 14
    assignstmt    go to state 15


State 73

    6 whilestmt: WHILE '(' expr ')' DO instructions BREAK . instructions ENDWHILE ';'
   10 instructions: instructions BREAK . stmt

    WRITE  shift, and go to state 4
    READ   shift, and go to state 5
    ID     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    ifstmt        go to state 9
    whilestmt     go to state 10
    instructions  go to state 79
    stmt          go to state 80
    inputstmt     go to state 13
    outputstmt    go to state 14
    assignstmt    go to state 15


State 74

    3 ifstmt: IF '(' expr ')' THEN instructions ELSE instructions . ENDIF ';'
    8 instructions: instructions . stmt
   10             | instructions . BREAK stmt
   11             | instructions . CONTINUE stmt

    WRITE     shift, and go to state 4
    READ      shift, and go to state 5
    ID        shift, and go to state 6
    IF        shift, and go to state 7
    ENDIF     shift, and go to state 81
    WHILE     shift, and go to state 8
    CONTINUE  shift, and go to state 23
    BREAK     shift, and go to state 24

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 25
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 75

    4 ifstmt: IF '(' expr ')' THEN instructions ENDIF ';' .

    $default  reduce using rule 4 (ifstmt)


State 76

    5 whilestmt: WHILE '(' expr ')' DO instructions ENDWHILE ';' .

    $default  reduce using rule 5 (whilestmt)


State 77

    7 whilestmt: WHILE '(' expr ')' DO instructions CONTINUE instructions . ENDWHILE ';'
    8 instructions: instructions . stmt
   10             | instructions . BREAK stmt
   11             | instructions . CONTINUE stmt

    WRITE     shift, and go to state 4
    READ      shift, and go to state 5
    ID        shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    ENDWHILE  shift, and go to state 82
    CONTINUE  shift, and go to state 23
    BREAK     shift, and go to state 24

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 25
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 78

    9 instructions: stmt .
   11             | instructions CONTINUE stmt .

    WRITE     reduce using rule 9 (instructions)
    WRITE     [reduce using rule 11 (instructions)]
    READ      reduce using rule 9 (instructions)
    READ      [reduce using rule 11 (instructions)]
    ID        reduce using rule 9 (instructions)
    ID        [reduce using rule 11 (instructions)]
    IF        reduce using rule 9 (instructions)
    IF        [reduce using rule 11 (instructions)]
    WHILE     reduce using rule 9 (instructions)
    WHILE     [reduce using rule 11 (instructions)]
    ENDWHILE  reduce using rule 9 (instructions)
    ENDWHILE  [reduce using rule 11 (instructions)]
    CONTINUE  reduce using rule 9 (instructions)
    CONTINUE  [reduce using rule 11 (instructions)]
    BREAK     reduce using rule 9 (instructions)
    BREAK     [reduce using rule 11 (instructions)]
    $default  reduce using rule 9 (instructions)


State 79

    6 whilestmt: WHILE '(' expr ')' DO instructions BREAK instructions . ENDWHILE ';'
    8 instructions: instructions . stmt
   10             | instructions . BREAK stmt
   11             | instructions . CONTINUE stmt

    WRITE     shift, and go to state 4
    READ      shift, and go to state 5
    ID        shift, and go to state 6
    IF        shift, and go to state 7
    WHILE     shift, and go to state 8
    ENDWHILE  shift, and go to state 83
    CONTINUE  shift, and go to state 23
    BREAK     shift, and go to state 24

    ifstmt      go to state 9
    whilestmt   go to state 10
    stmt        go to state 25
    inputstmt   go to state 13
    outputstmt  go to state 14
    assignstmt  go to state 15


State 80

    9 instructions: stmt .
   10             | instructions BREAK stmt .

    WRITE     reduce using rule 9 (instructions)
    WRITE     [reduce using rule 10 (instructions)]
    READ      reduce using rule 9 (instructions)
    READ      [reduce using rule 10 (instructions)]
    ID        reduce using rule 9 (instructions)
    ID        [reduce using rule 10 (instructions)]
    IF        reduce using rule 9 (instructions)
    IF        [reduce using rule 10 (instructions)]
    WHILE     reduce using rule 9 (instructions)
    WHILE     [reduce using rule 10 (instructions)]
    ENDWHILE  reduce using rule 9 (instructions)
    ENDWHILE  [reduce using rule 10 (instructions)]
    CONTINUE  reduce using rule 9 (instructions)
    CONTINUE  [reduce using rule 10 (instructions)]
    BREAK     reduce using rule 9 (instructions)
    BREAK     [reduce using rule 10 (instructions)]
    $default  reduce using rule 9 (instructions)


State 81

    3 ifstmt: IF '(' expr ')' THEN instructions ELSE instructions ENDIF . ';'

    ';'  shift, and go to state 84


State 82

    7 whilestmt: WHILE '(' expr ')' DO instructions CONTINUE instructions ENDWHILE . ';'

    ';'  shift, and go to state 85


State 83

    6 whilestmt: WHILE '(' expr ')' DO instructions BREAK instructions ENDWHILE . ';'

    ';'  shift, and go to state 86


State 84

    3 ifstmt: IF '(' expr ')' THEN instructions ELSE instructions ENDIF ';' .

    $default  reduce using rule 3 (ifstmt)


State 85

    7 whilestmt: WHILE '(' expr ')' DO instructions CONTINUE instructions ENDWHILE ';' .

    $default  reduce using rule 7 (whilestmt)


State 86

    6 whilestmt: WHILE '(' expr ')' DO instructions BREAK instructions ENDWHILE ';' .

    $default  reduce using rule 6 (whilestmt)
